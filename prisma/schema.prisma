generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String         @id @default(cuid())
  name              String?
  email             String?        @unique
  emailVerified     DateTime?
  image             String?
  password          String?
  role              UserRole       @default(USER)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  storageUsed       Float          @default(0)
  sessionVersion    Int            @default(1)
  vanityId          String?        @unique
  urlId             String         @unique
  uploadToken       String         @unique
  randomizeFileUrls Boolean        @default(false)
  files             File[]
  shortenedUrls     ShortenedUrl[]
}

model File {
  id             String         @id @default(cuid())
  name           String
  urlPath        String         @unique
  mimeType       String
  size           Float
  visibility     FileVisibility @default(PUBLIC)
  uploadedAt     DateTime       @default(now())
  userId         String
  path           String
  isOcrProcessed Boolean        @default(false)
  ocrText        String?
  password       String?
  isPaste        Boolean        @default(false)
  ocrConfidence  Float?
  views          Int            @default(0)
  downloads      Int            @default(0)
  user           User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ShortenedUrl {
  id        String   @id @default(cuid())
  shortCode String   @unique
  targetUrl String
  clicks    Int      @default(0)
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Config {
  id        String   @id @default(cuid())
  key       String   @unique
  value     Json
  updatedAt DateTime @updatedAt

  @@index([key])
}

enum UserRole {
  ADMIN
  USER
}

enum FileVisibility {
  PUBLIC
  PRIVATE
}

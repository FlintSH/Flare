// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  storageUsed   Float     @default(0)  // Total storage used in megabytes
  sessionVersion Int      @default(1)   // Used to invalidate all sessions
  files         File[]
  vanityId      String?   @unique // For custom URLs
  urlId         String    @unique // 4-character random ID for URLs
  shortenedUrls ShortenedUrl[]
  uploadToken   String    @unique @default(cuid()) // Permanent token for upload authentication
}

model File {
  id            String    @id @default(cuid())
  name          String    // Original filename with extension
  urlPath       String    @unique // Full URL path: /{userUrlId}/{filename}
  mimeType      String
  size          Float     // File size in megabytes
  visibility    FileVisibility @default(PUBLIC)
  uploadedAt    DateTime  @default(now())
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  path          String    // Storage path
  isOcrProcessed Boolean @default(false)
  ocrText       String?   @db.Text
  password      String?   // Optional password protection
  isPaste       Boolean   @default(false)  // Whether this is a paste entry
  ocrConfidence Float?
}

model ShortenedUrl {
  id          String   @id @default(cuid())
  shortCode   String   @unique
  targetUrl   String
  clicks      Int      @default(0)
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Config {
  id        String   @id @default(cuid())
  key       String   @unique
  value     Json
  updatedAt DateTime @updatedAt

  @@index([key])
}

enum UserRole {
  ADMIN
  USER
}

enum FileVisibility {
  PUBLIC
  PRIVATE
} 
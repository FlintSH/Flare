name: Rolling Release

on:
  push:
    branches: [ main ]
    paths-ignore: [ 'package.json' ]

jobs:
  rolling-release:
    name: Create Rolling Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit info
        id: commit_info
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%B)
          COMMIT_DATE=$(git log -1 --pretty=%cd --date=short)
          
          echo "sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "date=$COMMIT_DATE" >> $GITHUB_OUTPUT
          echo "COMMIT_MSG<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/flintsh/flare:rolling
            ghcr.io/flintsh/flare:rolling-${{ steps.commit_info.outputs.sha }}
            flintsh/flare:rolling
            flintsh/flare:rolling-${{ steps.commit_info.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create or update Rolling Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create rolling tag (force update if exists)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f rolling
          git push origin rolling --force
          
          # Release notes
          cat << 'EOF' > release_notes.md
          **Rolling Release** - Latest commit: `${{ steps.commit_info.outputs.sha }}` (${{ steps.commit_info.outputs.date }})
          
          ## Changes
          ${{ steps.commit_info.outputs.COMMIT_MSG }}
          
          ## Docker Images
          - `ghcr.io/flintsh/flare:rolling`
          - `flintsh/flare:rolling`
          - `ghcr.io/flintsh/flare:rolling-${{ steps.commit_info.outputs.sha }}`
          - `flintsh/flare:rolling-${{ steps.commit_info.outputs.sha }}`
          
          > ⚠️ **Warning:** This is a bleeding edge release. These will not receive any support nor will they be considered stable.
          EOF
          
          # Create or update release
          if gh release view rolling &>/dev/null; then
            gh release edit rolling \
              --title "Rolling Release (${{ steps.commit_info.outputs.sha }})" \
              --notes-file release_notes.md \
              --prerelease
          else
            gh release create rolling \
              --title "Rolling Release (${{ steps.commit_info.outputs.sha }})" \
              --notes-file release_notes.md \
              --prerelease
          fi 
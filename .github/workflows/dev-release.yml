name: Dev Release

on:
  push:
    branches-ignore: [ main ]

jobs:
  create-dev-release:
    name: Create Dev Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/flintsh/flare:dev
            flintsh/flare:dev
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create or update Dev Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NOTES: |
            ðŸš§ Latest development build from branch ${{ github.ref_name }}

            Get the Docker image from GitHub Container Registry:
            ```bash
            docker pull ghcr.io/flintsh/flare:dev
            ```

            Or from Docker Hub:
            ```bash
            docker pull flintsh/flare:dev
            ```
        run: |
          if ! git ls-remote --tags origin refs/tags/development | grep -q 'development'; then
            # Tag doesn't exist - create it
            git tag -f development
            git push origin development --force
          fi
          
          if gh release view development &>/dev/null; then
            gh release edit development \
              --title "Development Build from ${{ github.ref_name }}" \
              --notes "$RELEASE_NOTES"
          else
            gh release create development \
              --title "Development Build from ${{ github.ref_name }}" \
              --notes "$RELEASE_NOTES" \
              --prerelease 